{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/patients/PatientSummary.js","components/patients/PatientList.js","components/dashboard/Dashboard.js","components/patients/PatientDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/patients/CreatePatient.js","history.js","store/actions/patientActions.js","App.js","registerServiceWorker.js","reducers/authReducer.js","reducers/patientReducer.js","reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dipatch","signOut","dispatch","getState","getFirebase","auth","then","type","props","className","to","onClick","SignedOutLinks","state","firebase","links","uid","PatientSummary","patient","patientName","rHeartRate","bodyTempature","height","weight","triageTag","activeNurse","PatientList","patients","map","id","key","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","description","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","console","log","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","fullName","position","department","hospital","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","user","set","CreatePatient","history","medications","surgicaHistory","standingOrder","push","createPatient","add","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","action","message","patientReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","analytics","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","children","useSelector","isLoaded","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.aa0d7910.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {signOut} from \"../../store/actions/authActions\";\n\nconst SignedInLinks = (props) => {\n\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/create'>Add New Patient</NavLink></li>\n          <li><a onClick={props.signOut}> Log Out</a></li>\n        {/*<li><NavLink to='/' className=\"btn btn-floating red lighten-1\">AM</NavLink></li>*/}\n      </ul>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dipatch) => {\n    return{\n        signOut: () => dipatch(signOut())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SignedInLinks)\n","export const signIn = (credentials) => {\n    return (dispatch,getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'});\n        }).catch((err) => {\n            dispatch({type: 'LOGIN_ERROR',err});\n        });\n    }\n}\n\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\n\nexport const signUp = (newUser) => {\n    return (dispatch,getState , {getFirebase, getFirestore}) =>{\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n\n            newUser.email,\n            newUser.password\n        ).then(resp => {\n            return firestore.collection('Users').doc(resp.user.uid).set({\n                email: newUser.email,\n                fullName: newUser.fullName,\n                position: newUser.position,\n                hospital: newUser.hospital,\n                department: newUser.department,\n                // initials: newUser.fullName[0]\n\n            }).then(() => {\n                dispatch({ type: 'SIGNUP_SUCCESS'})\n            }).catch((err) => {\n                dispatch({type: 'SIGNUP_ERROR'});\n            });\n        })\n    }\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/signup'>Sign Up</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport {connect} from 'react-redux'\n\n\nconst Navbar = (props) => {\n    const {auth} = props;\n    // console.log(auth);\n    const links = auth.uid ? <SignedInLinks/> : <SignedOutLinks/>;\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">Patient Monitoring System</Link>\n          {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n    return{\n\n        auth: state.firebase.auth\n\n    }\n\n}\n\nexport default connect(mapStateToProps)(Navbar)\n","import React from \"react\";\n\nconst PatientSummary = ({patient}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary light grey center\">\n            <div className=\"card-content grey-text text-darken-3 hoverable\">\n                <span className=\"card-title \">{patient.patientName}</span>\n                <p>Heart Rate - {patient.rHeartRate}</p>\n                <p>Body Temperature - {patient.bodyTempature}</p>\n                <p>Height - {patient.height}</p>\n                <p>Weight - {patient.weight}</p>\n                <p>Triage Tag - {patient.triageTag}</p>\n                <p className=\"grey-text\">Active Nurse: {patient.activeNurse}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default PatientSummary\n","import React from 'react'\nimport PatientSummary from './PatientSummary'\nimport {Link } from 'react-router-dom'\n\nconst PatientList = ({patients}) => {\n  return (\n    <div className=\"project-list section\">\n\n\n        {patients && patients.map(patient => {\n\n\n            return (\n                <Link to={'/patient/' + patient.id} key={patient.id}>\n                <PatientSummary patient={patient} />\n        </Link>\n            )\n\n        })}\n\n\n\n    </div>\n  )\n}\n\nexport default PatientList\n","import React, { Component } from 'react'\nimport PatientList from '../patients/PatientList'\nimport Notifications from './Notifications'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from \"react-redux-firebase\";\nimport {compose} from \"redux\";\nimport {Redirect} from 'react-router-dom'\n\nclass Dashboard extends Component {\n  render() {\n\n    const {patients, auth} = this.props;\n    if(!auth.uid) return <Redirect to='/signin'/>\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          {/*<div className=\"col s12 m6\">*/}\n            <PatientList patients={patients} />\n          {/*</div>*/}\n          {/*<div className=\"col s12 m5 offset-m1\">*/}\n          {/*  <Notifications />*/}\n          {/*</div>*/}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n\n\n  return {\n    patients: state.firestore.ordered.patients,\n      auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'patients'}\n    ])\n)(Dashboard)\n","import React from \"react\";\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from \"react-redux-firebase\";\nimport {compose} from 'redux'\nimport {Redirect} from 'react-router-dom'\n\n\nconst PatientDetails = (props) => {\n    const {patient, auth} = props;\n    if(!auth.uid) return <Redirect to='/signin'/>\n\n    if(patient){\n\n        return(\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title center\">{patient.patientName}</span>\n                        <p>Patient Description: {patient.description}</p>\n                        <p>Height: {patient.height}</p>\n                        <p>Weight: {patient.weight}</p>\n                        <p>Heart Rate: {patient.rHeartRate}</p>\n\n\n\n\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        {/*<div>Posted by The Net Ninja</div>*/}\n                        {/*<div>2nd September, 2am</div>*/}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    else {\n\n\n        return (\n            <div className=\"container center\">\n            <p>Loading Patient Data one second....</p>\n            </div>\n\n        )\n    }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const patients = state.firestore.data.patients;\n    const patient = patients ? patients[id] : null;\n    return{\n\n        patient: patient,\n        auth: state.firebase.auth\n\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'patients'}\n    ])\n)(PatientDetails)\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {signIn} from \"../../store/actions/authActions\";\nimport {Redirect} from 'react-router-dom'\n\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n           [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signIn(this.state)\n    }\n    render() {\n        const {authError, auth} = this.props;\n        if(auth.uid) return <Redirect to='/'/>\n\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn red lighten-1 z-depth-0\">Login</button>\n\n                        <div className='red-text center'>\n                            {authError ? <p>{authError}</p> : null }\n\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {signUp} from \"../../store/actions/authActions\";\n\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        fullName: '',\n        position: '',\n        department: '',\n        hospital: '' ,\n        // confirmpassword: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signUp(this.state)\n    }\n    render() {\n        const { auth ,authError} = this.props;\n        if(auth.uid) return <Redirect to='/'/>\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\n                    </div>\n                    {/*<div className=\"input-field\">*/}\n                    {/*    <label htmlFor=\"confirmpassword\">Confirm Password</label>*/}\n                    {/*    <input type=\"password\" id='confirmpassword' onChange={this.handleChange} />*/}\n                    {/*</div>*/}\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">Full Name</label>\n                        <input type=\"text\" id='fullName' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"position\">Position</label>\n                        <input type=\"text\" id='position' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"department\">Department</label>\n                        <input type=\"text\" id='department' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"hospital\">Hospital</label>\n                        <input type=\"text\" id='hospital' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn red lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react'\nimport {createPatient} from \"../../store/actions/patientActions\";\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport history from \"../../history\";\nimport {Redirect} from 'react-router-dom'\n\nclass CreatePatient extends Component {\n    state = {\n        patientName: '',\n        description: '',\n        height: '',\n        weight: '',\n        rHeartRate: '',\n        triageTag:  '',\n        bodyTempature: '',\n        medications: '',\n        surgicaHistory: '',\n        activeNurse: '',\n        standingOrder: ''\n\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.history.push('/');\n\n        console.log(this.state);\n        this.props.createPatient(this.state)\n    }\n    render() {\n        const {auth} = this.props;\n        if(!auth.uid) return <Redirect to='/signin'/>\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Add a New Patient</h5>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"patientName\">Patient Name</label>\n                        <input type=\"text\" id='patientName' onChange={this.handleChange} />\n\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"description\">Project Description</label>\n                        <textarea id=\"description\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"height\">Patient Height</label>\n                        <input type=\"text\" id='height' onChange={this.handleChange} />\n\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"weight\">Patient Weight</label>\n                        <input type=\"number\" id='weight' onChange={this.handleChange} />\n\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"rHeartRate\">Patient Resting Heart Rate</label>\n                        <input type=\"number\" id='rHeartRate' onChange={this.handleChange} />\n\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"triageTag\">TriageTag</label>\n                        <input type=\"text\" id='triageTag' onChange={this.handleChange} />\n\n                    </div>\n\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"bodyTempature\">Patient Resting Heart Rate</label>\n                        <input type=\"number\" id='bodyTempature' onChange={this.handleChange} />\n\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"medications\">Current Medication (Separate With Commas)</label>\n                        <input type=\"text\" id='medications' onChange={this.handleChange} />\n\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"surgicaHistory\">Surgical History (Separate With Commas)</label>\n                        <input type=\"text\" id='surgicaHistory' onChange={this.handleChange} />\n\n                    </div>\n\n\n                    <div className=\"input-field\">\n                        {/*<p>Test</p>*/}\n                        <button className=\"btn red lighten-1\" >Add Patient</button>\n                        {/*<Link*/}\n                        {/*    to=\"/\" >*/}\n                        {/*    <button className=\"btn red lighten-1\">Add Patient</button>*/}\n\n                        {/*</Link>*/}\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createPatient: (patient) => dispatch(createPatient(patient))\n    }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CreatePatient)\n","import { createBrowserHistory as history} from 'history';\n\nexport default history();\n","\n\nexport const createPatient = (patient) =>{\n\n    return(dispatch,getState, {getFirebase, getFirestore}) => {\n        // make a sync call to db\n\n        const firestore = getFirestore();\n        // console.log('Test');\n\n        firestore.collection('patients').add({\n\n            ...patient\n\n            // authorFirstName: 'Net'\n        }).then(() =>{\n            console.log('Test');\n            dispatch({type: 'CREATE_PATIENT', patient});\n\n\n        }).catch((err) => {\n            dispatch({type: 'CREATE_PATIENT_ERROR', err});\n        })\n\n\n\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/patients/PatientDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreatePatient from './components/patients/CreatePatient';\n\nclass App extends Component {\n  render() {\n    return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path='/' component={Dashboard} />\n              <Route path='/patient/:id' component={ProjectDetails} />\n              <Route path='/signin' component={SignIn} />\n              <Route path='/signup' component={SignUp} />\n              <Route path='/create' component={CreatePatient} />\n\n            </Switch>\n          </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('error login');\n            return {\n\n                ...state,\n                authError: 'login failed'\n            };\n        case 'LOGIN_SUCCESS':\n            console.log('success login');\n            return {\n                ...state,\n                authError: null\n            };\n\n            case 'SIGNOUT_SUCCESS':\n                console.log('signout success');\n                return state\n\n        case 'SIGNUP_SUCCESS':\n            console.log('sign up success');\n            return {\n                ...state,\n                authError: null\n            }\n\n        case 'SIGNUP_ERROR':\n            console.log('sign up error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n\n\n        default:\n            return state;\n    }\n    // return state\n\n}\n\n\nexport default authReducer ///()?\n","const initState = {\n    patients: [\n        {id: '1', patientName: 'Alphonso Mckenzie',description: 'Sick sick sick', height: \"5'10\", weight: 220, rHeartRate: '75', triageTag: 'BLUE', bodyTempature: '95 degrees', medications: 'None', surgicaHistory: 'None',activeNurse: 'NA'  },\n        {id: '2', patientName: 'Bob Billy',description: 'Badly Ill', height: \"5'10\", weight: 130, rHeartRate: '65', triageTag: 'RED', bodyTempature: '100 degrees', medications: 'None', surgicaHistory: 'None',activeNurse: 'NA' },\n        {id: '3', patientName: 'Doug Dimmadome',description: 'Corona', height: \"5'10\", weight: 2220, rHeartRate: '80', triageTag: 'RED', bodyTempature: '103 degrees', medications: 'Surp', surgicaHistory: 'None',activeNurse: 'NA'  },\n        {id: '4', patientName: 'Doug12311 Dimmadome',description: 'Corona', height: \"5'10\", weight: 2220, rHeartRate: '80', triageTag: 'RED', bodyTempature: '103 degrees', medications: 'Surp', surgicaHistory: 'None',activeNurse: 'NA'  }\n\n    ]\n}\n\nconst patientReducer = (state = initState, action) => {\n\n    switch (action.type) {\n        case 'CREATE_PATIENT':\n        console.log('created patient', action.patient);\n        return state;\n\n        case 'CREATE_PATIENT_ERROR':\n            console.log('create patient error', action.err);\n            return state;\n        default:\n            return state;\n\n    }\n\n\n}\n\n\nexport default patientReducer ///()?\n","import authReducer from \"./authReducer\";\nimport patientReducer from \"./patientReducer\";\nimport {combineReducers} from \"redux\";\nimport { firestoreReducer} from \"redux-firestore\";\nimport {firebaseReducer} from \"react-redux-firebase\";\n\nconst rootReducer =  combineReducers({\n\n    auth: authReducer,\n    patient: patientReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n\n\n});\n\nexport default rootReducer\n","import firebase from \"firebase/app\";\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport 'firebase/analytics'\n\n\nexport var firebaseConfig = {\n    apiKey: \"AIzaSyB0ODKW_reMr84xHfAaPOeneey-LuOZbL0\",\n    authDomain: \"patient-monitoring-syste-39706.firebaseapp.com\",\n    databaseURL: \"https://patient-monitoring-syste-39706.firebaseio.com\",\n    projectId: \"patient-monitoring-syste-39706\",\n    storageBucket: \"patient-monitoring-syste-39706.appspot.com\",\n    messagingSenderId: \"721554238180\",\n    appId: \"1:721554238180:web:98224e49e7ba52badfdaf1\",\n    measurementId: \"G-EFZKZEJ2MM\"\n};\nfirebase.initializeApp(firebaseConfig);\n// Initialize Firebase\nfirebase.analytics();\nfirebase.firestore().settings({timestampsInSnapshots: true});\n\n\n\n\nexport default firebase;\n\n// export default firebaseConfig;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose} from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport {Provider} from \"react-redux\";\nimport thunk from \"redux-thunk\";\n// import {getFirestore} from 'redux-firestore'\n// import {getFirebase} from 'react-redux-firebase'\nimport {reduxFirestore, getFirestore, createFirestoreInstance} from \"redux-firestore\";\nimport { reactReduxFirebase,getFirebase,ReactReduxFirebaseProvider} from \"react-redux-firebase\";\n// import firebaseConfig from './config/firebaseConfig'\nimport firebase, { firebaseConfig } from './config/firebaseConfig'\nimport {useSelector} from \"react-redux\";\nimport {isLoaded} from \"react-redux-firebase\";\n\nconst store = createStore(rootReducer,\n    compose(applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n        reduxFirestore(firebase,firebaseConfig),\n        // reactReduxFirebase(firebaseConfig)\n    )\n);\n\nconst profileSpecificProps = {\n    userProfile: 'Users',\n    useFirestoreForProfile: true,\n    enableRedirectHandling: false,\n    resetBeforeLogin: false\n}\n\nconst rrfProps = {\n    firebase,\n    config: firebaseConfig,\n    config: profileSpecificProps,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n    userProfile: 'Users',\n    sessions: 'sessions'\n}\n\nfunction AuthIsLoaded({children}){\n    const auth = useSelector(state => state.firebase.auth)\n    if(!isLoaded(auth)) return <div>Loading Screen.....</div>;\n    return children\n}\n\nReactDOM.render(\n    <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n   <AuthIsLoaded> <App/></AuthIsLoaded> </ReactReduxFirebaseProvider>\n    </Provider>,\ndocument.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}